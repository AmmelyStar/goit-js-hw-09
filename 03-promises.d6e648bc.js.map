{"mappings":"iiBAAC,IAAAA,EAAAC,EAAA,SAEKC,EAAW,CACfC,MAAOC,SAASC,cAAc,qBAC9BC,KAAMF,SAASC,cAAc,oBAC7BE,OAAQH,SAASC,cAAc,sBAC/BG,IAAKJ,SAASC,cAAc,uBAC5BI,KAAML,SAASC,cAAc,UAyB/B,SAASK,EAAcC,EAAUR,GAC/B,OAAO,IAAIS,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEF,WAAUR,UAGpBW,EAAO,CAAEH,WAAUR,S,GAGpBA,E,IAlCPD,EAASO,KAAKU,iBAAiB,UAAU,SAAAC,GACvCA,EAAMC,iBAKN,IAJA,IAAMC,EAAaC,OAAOrB,EAASC,MAAMqB,OACnCC,EAAYF,OAAOrB,EAASI,KAAKkB,OACjCE,EAAcH,OAAOrB,EAASK,OAAOiB,OAElCG,EAAI,EAAGA,EAAID,EAAaC,IAAI,CAInCjB,EAHeiB,EAAI,EACLL,EAAaG,EAAYE,GAGpCC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUR,EAAK0B,EAAL1B,MACrB2B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAAN9B,EAAM,M,IAGvE+B,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUR,EAAK0B,EAAL1B,MAClB2B,EAAA9B,GAAS+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAAN9B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":[" import Notiflix from 'notiflix';\n\nconst elements = {\n  delay: document.querySelector('input[name=delay]'),\n  step: document.querySelector('input[name=step]'),\n  amount: document.querySelector('input[name=amount]'),\n  btn: document.querySelector('button[type=submit]'),\n  form: document.querySelector('.form')\n\n}\n\nelements.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const valueDelay = Number(elements.delay.value);\n  const valueStep = Number(elements.step.value);\n  const valueAmount = Number(elements.amount.value);\n\n  for (let i = 0; i < valueAmount; i++){\n    let position = i + 1;\n    const delay = valueDelay + valueStep * i;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n   \n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n      \n    }, delay)\n  });\n};\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$elements","delay","document","querySelector","step","amount","btn","form","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","valueDelay","Number","value","valueStep","valueAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.d6e648bc.js.map"}